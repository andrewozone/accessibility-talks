{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/2019-AUG","result":{"data":{"markdownRemark":{"id":"7af565a4-d482-5b25-a2d1-b6bec94bce3d","html":"<p>When we develop a new web application, we often put a lot of work on the design, on making it beautiful and usable. In other words, we want our web app to be effective, efficient, and satisfying for the user. But a lot of times we don’t think about the user experience for people with disabilities, including people with age-related impairments.</p>\n<p>Web accessibility (a11y) means that people with disabilities can perceive, understand, navigate, and interact with websites and tools and that they can contribute equally without barriers.” (Source: W3C - Web Accessibility Initiative). Our role as frontend and web developers is to create clear interfaces to make people understand and care about data, independently of their disabilities or impairments, but what we, developers, often forget is to ensure that the code we write follows the Web Content Accessibility Guidelines (WCAG), and the only way to achieve that is testing, either manual or automated.</p>\n<p>Automated web a11y tests can free up our QA team from manual testing every part of our application…but…they can’t automatically, and magically, make our site accessible. We should use automated accessibility tests as one step of a larger testing process. Remember that only 20% to 50% of all accessibility issues can automatically be detected.</p>\n<p>Adrián will show us some testing tools, libraries, and techniques to increase the a11y test coverage of our code with a simple React application example.</p>\n<iframe title=\"Testing Web Accessibility by Adrián Bolonio\" src=\"https://www.youtube.com/embed/Nq6UhL_QvZk\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<hr>\n<p><b>Recorded:</b> August 20, 2019 (12pm ET)<br>\n<b>Speaker:</b> Adrián Bolonio (Twitter - @bolonio)<br>\n<b>Demo:</b> <a href=\"https://github.com/bolonio/testing-web-a11y\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/bolonio/testing-web-a11y</a></p>","fields":{"slug":"/posts/2019-AUG","tagSlugs":["/tag/2019/","/tag/development/","/tag/java-script/","/tag/tools/","/tag/wcag/"]},"frontmatter":{"date":"2019-08-20","description":"When we develop a new web application, we often put a lot of work on the design, on making it beautiful and usable. In other words, we want our web app to be effective, efficient, and satisfying for the user. But a lot of times we don’t think about the user experience for people with disabilities, including people with age-related impairments. Adrián will show us some testing tools, libraries, and techniques to increase the a11y test coverage of our code with a simple React application example.","tags":["2019","Development","JavaScript","Tools","WCAG"],"title":"Accessibility in the Modern Digital Agency","subtitle":"Adrián Bolonio","socialImage":"/media/adrian.jpg"}}},"pageContext":{"slug":"/posts/2019-AUG"}},"staticQueryHashes":["251939775","401334301","608223278"]}